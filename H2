#include <iostream>

using namespace std;

class Complex {
private:
    double real;
    double imag;

public:
    // Constructors
    Complex(double r = 0.0, double i = 0.0) : real(r), imag(i) {}

    // Getter functions
    double getReal() const { return real; }
    double getImag() const { return imag; }

    // Friend functions for arithmetic operations
    friend Complex operator+(const Complex& c1, const Complex& c2);
    friend Complex operator-(const Complex& c1, const Complex& c2);
    friend Complex operator*(const Complex& c1, const Complex& c2);
    friend Complex operator/(const Complex& c1, const Complex& c2);

    // Display function
    friend ostream& operator<<(ostream& out, const Complex& c);
};

// Friend function definitions for arithmetic operations
Complex operator+(const Complex& c1, const Complex& c2) {
    return Complex(c1.real + c2.real, c1.imag + c2.imag);
}

Complex operator-(const Complex& c1, const Complex& c2) {
    return Complex(c1.real - c2.real, c1.imag - c2.imag);
}

Complex operator*(const Complex& c1, const Complex& c2) {
    return Complex((c1.real * c2.real) - (c1.imag * c2.imag), (c1.real * c2.imag) + (c1.imag * c2.real));
}

Complex operator/(const Complex& c1, const Complex& c2) {
    double denominator = (c2.real * c2.real) + (c2.imag * c2.imag);
    double realPart = ((c1.real * c2.real) + (c1.imag * c2.imag)) / denominator;
    double imagPart = ((c1.imag * c2.real) - (c1.real * c2.imag)) / denominator;
    return Complex(realPart, imagPart);
}

// Display function definition
ostream& operator<<(ostream& out, const Complex& c) {
    if (c.imag >= 0)
        out << c.real << " + " << c.imag << "i";
    else
        out << c.real << " - " << -c.imag << "i";
    return out;
}

int main() {
    Complex c1(3, 4);  // 3 + 4i
    Complex c2(1, -2); // 1 - 2i

    // Addition
    Complex sum = c1 + c2;
    cout << "Sum: " << sum << endl;

    // Subtraction
    Complex diff = c1 - c2;
    cout << "Difference: " << diff << endl;

    // Multiplication
    Complex product = c1 * c2;
    cout << "Product: " << product << endl;

    // Division
    Complex quotient = c1 / c2;
    cout << "Quotient: " << quotient << endl;

    return 0;
}
